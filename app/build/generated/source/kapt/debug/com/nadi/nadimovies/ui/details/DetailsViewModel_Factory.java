// Generated by Dagger (https://dagger.dev).
package com.nadi.nadimovies.ui.details;

import androidx.lifecycle.SavedStateHandle;
import com.nadi.nadimovies.domain.movie.MovieUseCase;
import com.nadi.nadimovies.domain.similar.SimilarUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DetailsViewModel_Factory implements Factory<DetailsViewModel> {
  private final Provider<SimilarUseCase> similarUseCaseProvider;

  private final Provider<MovieUseCase> movieUseCaseProvider;

  private final Provider<SavedStateHandle> savedStateHandleProvider;

  public DetailsViewModel_Factory(Provider<SimilarUseCase> similarUseCaseProvider,
      Provider<MovieUseCase> movieUseCaseProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    this.similarUseCaseProvider = similarUseCaseProvider;
    this.movieUseCaseProvider = movieUseCaseProvider;
    this.savedStateHandleProvider = savedStateHandleProvider;
  }

  @Override
  public DetailsViewModel get() {
    return newInstance(similarUseCaseProvider.get(), movieUseCaseProvider.get(), savedStateHandleProvider.get());
  }

  public static DetailsViewModel_Factory create(Provider<SimilarUseCase> similarUseCaseProvider,
      Provider<MovieUseCase> movieUseCaseProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    return new DetailsViewModel_Factory(similarUseCaseProvider, movieUseCaseProvider, savedStateHandleProvider);
  }

  public static DetailsViewModel newInstance(SimilarUseCase similarUseCase,
      MovieUseCase movieUseCase, SavedStateHandle savedStateHandle) {
    return new DetailsViewModel(similarUseCase, movieUseCase, savedStateHandle);
  }
}
