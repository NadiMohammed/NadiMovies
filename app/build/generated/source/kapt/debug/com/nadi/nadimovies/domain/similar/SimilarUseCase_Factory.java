// Generated by Dagger (https://dagger.dev).
package com.nadi.nadimovies.domain.similar;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SimilarUseCase_Factory implements Factory<SimilarUseCase> {
  private final Provider<SimilarRepository> similarRepositoryProvider;

  public SimilarUseCase_Factory(Provider<SimilarRepository> similarRepositoryProvider) {
    this.similarRepositoryProvider = similarRepositoryProvider;
  }

  @Override
  public SimilarUseCase get() {
    return newInstance(similarRepositoryProvider.get());
  }

  public static SimilarUseCase_Factory create(
      Provider<SimilarRepository> similarRepositoryProvider) {
    return new SimilarUseCase_Factory(similarRepositoryProvider);
  }

  public static SimilarUseCase newInstance(SimilarRepository similarRepository) {
    return new SimilarUseCase(similarRepository);
  }
}
