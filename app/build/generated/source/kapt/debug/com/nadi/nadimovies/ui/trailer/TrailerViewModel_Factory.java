// Generated by Dagger (https://dagger.dev).
package com.nadi.nadimovies.ui.trailer;

import com.nadi.nadimovies.domain.trailer.TrailerUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TrailerViewModel_Factory implements Factory<TrailerViewModel> {
  private final Provider<TrailerUseCase> trailerUseCaseProvider;

  public TrailerViewModel_Factory(Provider<TrailerUseCase> trailerUseCaseProvider) {
    this.trailerUseCaseProvider = trailerUseCaseProvider;
  }

  @Override
  public TrailerViewModel get() {
    return newInstance(trailerUseCaseProvider.get());
  }

  public static TrailerViewModel_Factory create(Provider<TrailerUseCase> trailerUseCaseProvider) {
    return new TrailerViewModel_Factory(trailerUseCaseProvider);
  }

  public static TrailerViewModel newInstance(TrailerUseCase trailerUseCase) {
    return new TrailerViewModel(trailerUseCase);
  }
}
