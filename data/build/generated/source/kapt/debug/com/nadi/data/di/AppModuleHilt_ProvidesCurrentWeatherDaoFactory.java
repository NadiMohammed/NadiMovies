// Generated by Dagger (https://dagger.dev).
package com.nadi.data.di;

import com.nadi.data.local.MainDatabase;
import com.nadi.data.local.MoviesDAO;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModuleHilt_ProvidesCurrentWeatherDaoFactory implements Factory<MoviesDAO> {
  private final Provider<MainDatabase> dbProvider;

  public AppModuleHilt_ProvidesCurrentWeatherDaoFactory(Provider<MainDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public MoviesDAO get() {
    return providesCurrentWeatherDao(dbProvider.get());
  }

  public static AppModuleHilt_ProvidesCurrentWeatherDaoFactory create(
      Provider<MainDatabase> dbProvider) {
    return new AppModuleHilt_ProvidesCurrentWeatherDaoFactory(dbProvider);
  }

  public static MoviesDAO providesCurrentWeatherDao(MainDatabase db) {
    return Preconditions.checkNotNullFromProvides(AppModuleHilt.INSTANCE.providesCurrentWeatherDao(db));
  }
}
