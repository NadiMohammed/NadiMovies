// Generated by Dagger (https://dagger.dev).
package com.nadi.data.repository;

import com.nadi.data.local.MainDatabase;
import com.nadi.data.network.MovieAPIs;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MovieRepositoryImplementer_Factory implements Factory<MovieRepositoryImplementer> {
  private final Provider<MainDatabase> databaseProvider;

  private final Provider<MovieAPIs> movieAPIsProvider;

  public MovieRepositoryImplementer_Factory(Provider<MainDatabase> databaseProvider,
      Provider<MovieAPIs> movieAPIsProvider) {
    this.databaseProvider = databaseProvider;
    this.movieAPIsProvider = movieAPIsProvider;
  }

  @Override
  public MovieRepositoryImplementer get() {
    return newInstance(databaseProvider.get(), movieAPIsProvider.get());
  }

  public static MovieRepositoryImplementer_Factory create(Provider<MainDatabase> databaseProvider,
      Provider<MovieAPIs> movieAPIsProvider) {
    return new MovieRepositoryImplementer_Factory(databaseProvider, movieAPIsProvider);
  }

  public static MovieRepositoryImplementer newInstance(MainDatabase database, MovieAPIs movieAPIs) {
    return new MovieRepositoryImplementer(database, movieAPIs);
  }
}
